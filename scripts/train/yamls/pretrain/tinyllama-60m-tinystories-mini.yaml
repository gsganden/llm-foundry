variables:
  data_local: ../data_prep/data/tinystories-TinyLlama_v1.1-mini
  data_remote:  # If blank, files must be present in data_local
  max_seq_len: 2048
  global_seed: 17

  # Run Name
  run_name:  # If left blank, will be read from env var $RUN_NAME

max_seq_len: ${variables.max_seq_len}
run_name: ${variables.run_name}

# Model
model:
  name: hf_causal_lm
  pretrained: false  # Must be false to modify architecture
  pretrained_model_name_or_path: TinyLlama/TinyLlama-1.1B-Chat-v1.0  # Using TinyLlama architecture
  config_overrides:
    max_position_embeddings: ${variables.max_seq_len}  # max_seq_len
    hidden_size: 512              # d_model
    num_attention_heads: 8        # n_heads
    num_hidden_layers: 8          # n_layers
    intermediate_size: 2048       # 4 * hidden_size (expansion ratio of 4)
    hidden_act: silu             # TinyLlama uses SiLU activation
    rms_norm_eps: 1e-5
    # Additional TinyLlama specific configs
    use_cache: false
    pad_token_id: null
    bos_token_id: 1
    eos_token_id: 2
    initializer_range: 0.02

# Tokenizer
tokenizer:
  # TinyLlama tokenizer (active)
  name: TinyLlama/TinyLlama-1.1B-Chat-v1.0
  kwargs:
    model_max_length: ${variables.max_seq_len}

# Dataloaders
train_loader:
  name: text
  dataset:
    local: ${variables.data_local}
    remote: ${variables.data_remote}
    split: train
    shuffle: true
    max_seq_len: ${variables.max_seq_len}
    shuffle_seed: ${variables.global_seed}
  drop_last: true
  num_workers: 8
  persistent_workers: true
  pin_memory: true

eval_loader:
  name: text
  dataset:
    local: ${variables.data_local}
    remote: ${variables.data_remote}
    split: val
    shuffle: false
    max_seq_len: ${variables.max_seq_len}
    shuffle_seed: ${variables.global_seed}
  drop_last: false
  num_workers: 8

# Training
max_duration: 1000000000tok  # 1B tokens
eval_interval: 100000000tok  # Eval every 100M tokens
eval_first: false
eval_subset_num_batches: -1

global_train_batch_size: 1
device_train_microbatch_size: 1
device_eval_batch_size: 1

# Optimization
scheduler:
  name: cosine_with_warmup
  t_warmup: 200000tok
  alpha_f: 0.1

optimizer:
  name: decoupled_adamw
  lr: 6.0e-4
  betas:
  - 0.9
  - 0.95
  eps: 1.0e-8
  weight_decay: 0.0

algorithms:
  gradient_clipping:
    clipping_type: norm
    clipping_threshold: 1.0

# System
seed: ${variables.global_seed}
precision: amp_bf16

# FSDP
fsdp_config:
  sharding_strategy: FULL_SHARD
  mixed_precision: PURE
  activation_checkpointing: true
  activation_checkpointing_reentrant: true
  activation_cpu_offload: false
  limit_all_gathers: true
  forward_prefetch: true
  backward_prefetch: true

# Logging
progress_bar: false
log_to_console: true
console_log_interval: 1ba

callbacks:
  speed_monitor:
    window_size: 10
  memory_monitor: {}
  lr_monitor: {}
  runtime_estimator: {}

# Rough parameter count:
# Embeddings: 50257 × 512 ≈ 25.7M
# Each layer: 512 × 512 × 4 (MLP) + 512 × 512 × 3 (attn) ≈ 3.7M
# 8 layers × 3.7M = 29.6M
# Total: ~55.3M parameters


